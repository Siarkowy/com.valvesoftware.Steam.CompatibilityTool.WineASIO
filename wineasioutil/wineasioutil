#!/bin/bash

exec 2> >(tee "${XDG_DATA_HOME:-/tmp}/wineasioutil.log") 1>&2

set -euo pipefail
if [ "${DEBUG:-0}" -ge 99 ]; then
  set -x
fi

_log() {
  echo >&2 "[wineasioutil]" "$@"
}

find_proton_path() {
  for arg in "$@"; do
    if echo "$arg" | grep -E 'proton$'; then
      return
    fi
  done
}

find_prefix_path() {
  echo "$@" \
    | grep -Eo '[^ ]+Rocksmith2014.exe' \
    | sed 's:/common/Rocksmith2014/Rocksmith2014.exe:/compatdata/221680/pfx:'
}

get_proton_root_dir() {
  dirname "$1"
}

get_proton_dist_dir() {
  local proton_root="$1"

  if [ -d "${proton_root}/dist" ]; then
    echo "${proton_root}/dist"
  elif [ -d "${proton_root}/files" ]; then
    echo "${proton_root}/files"
  else
    _log "Proton Dist directory not found in: ${proton_root}"
    return 1
  fi
}

copy_wineasio_dlls() {
  local proton_dist="$1"
  local compat_pfx="$2"

  WINEASIO_DIR="/app/share/steam/compatibilitytools.d/WineASIO"

  _log "Installing 32-bit wineasio files in Proton."
  install -v -m755 "${WINEASIO_DIR}/lib32/wine/i386-windows/wineasio.dll" "${proton_dist}/lib/wine/i386-windows/"
  install -v -m755 "${WINEASIO_DIR}/lib32/wine/i386-unix/wineasio.dll.so" "${proton_dist}/lib/wine/i386-unix/"

  _log "Installing 64-bit wineasio files in Proton."
  install -v -m755 "${WINEASIO_DIR}/lib/wine/x86_64-windows/wineasio.dll" "${proton_dist}/lib64/wine/x86_64-windows/"
  install -v -m755 "${WINEASIO_DIR}/lib/wine/x86_64-unix/wineasio.dll.so" "${proton_dist}/lib64/wine/x86_64-unix/"

  _log "Making wineasio DLLs loadable in game from Proton prefix."
  install -v -m644 "${WINEASIO_DIR}/lib32/wine/i386-windows/wineasio.dll" "${compat_pfx}/drive_c/windows/syswow64/"
  install -v -m644 "${WINEASIO_DIR}/lib/wine/x86_64-windows/wineasio.dll" "${compat_pfx}/drive_c/windows/system32/"
}

register_wineasio_dlls() {
  local proton_dist="$1"
  local compat_pfx="$2"

  (
    export WINEPREFIX="${compat_pfx}"

    export WINEESYNC=1
    export WINEFSYNC=1

    set -x
    env | grep WINE

    # 32-bit
    "${proton_dist}/bin/wine" regsvr32 "${proton_dist}/lib/wine/i386-windows/wineasio.dll"

    # 64-bit
    "${proton_dist}/bin/wine64" regsvr32 "${proton_dist}/lib64/wine/x86_64-windows/wineasio.dll"
  )
}

validate_sandbox_env() {
  if [ -z "${FLATPAK_ID:-}" ]; then
    _log Running outside of Flatpak unsupported.
    exit 1
  fi
}

validate_game_env() {
  if [ -z "${PIPEWIRE_LATENCY:-}" ]; then
    _log Required PIPEWIRE_LATENCY variable missing.
    exit 1
  fi
}

create_prefix_if_necessary() {
  local PROTON_PREFIX="$1"

  if [ -d "${PROTON_PREFIX}" ]; then
    _log Game Prefix exists, skipping first run.
    return
  fi

  _log Game Prefix does not exist, running first time to create.

  set -x
  # first run
  exec "${@:2}"
}

run_game() {
  if [ "${DEBUG:-0}" -ge 1 ]; then
    export PROTON_LOG=1
    export PROTON_LOG_DIR="${PROTON_LOG_DIR:-${XDG_DATA_HOME}}"
    _log "Enabled PROTON_LOG in: ${PROTON_LOG_DIR}"
  fi

  if [ "${DEBUG:-0}" -ge 2 ]; then
    export PROTON_DUMP_DEBUG_COMMANDS=1
    export PROTON_DEBUG_DIR="${PROTON_DEBUG_DIR:-${XDG_DATA_HOME}}"
    _log "Enabled PROTON_DUMP_DEBUG_COMMANDS in: ${PROTON_DEBUG_DIR}"
  fi

  if [ "${DEBUG:-0}" -ge 3 ]; then
    export PIPEWIRE_DEBUG="${PIPEWIRE_DEBUG:-3}"
    _log "Enabled PipeWire debugging."
  fi

  if [ "${DEBUG:-0}" -ge 4 ]; then
    export STEAM_LINUX_RUNTIME_LOG="${STEAM_LINUX_RUNTIME_LOG:-1}"
    export STEAM_LINUX_RUNTIME_LOG_DIR="${STEAM_LINUX_RUNTIME_LOG_DIR:-${XDG_DATA_HOME}}"
    export STEAM_LINUX_RUNTIME_VERBOSE="${STEAM_LINUX_RUNTIME_VERBOSE:-0}"
    _log "Enabled Steam Runtime debugging."
  fi

  set -x

  # required variables
  export LD_PRELOAD="/usr/lib/i386-linux-gnu/libjack.so.0"
  export WINEDLLOVERRIDES="wineasio.dll=b"

  # godspeed
  exec "$@" &> "${XDG_DATA_HOME:-/tmp}/proton.log"
}

main() {
  validate_sandbox_env

  PROTON_PATH="${PROTON_PATH:-$(find_proton_path "$@")}"
  PROTON_ROOT="$(get_proton_root_dir "${PROTON_PATH}")"
  PROTON_DIST="$(get_proton_dist_dir "${PROTON_ROOT}")"
  PROTON_PREFIX="${PROTON_PREFIX:-$(find_prefix_path "$@")}"

  _log "Running using Proton: ${PROTON_ROOT}"
  _log "Using Proton Dist in: ${PROTON_DIST}"
  _log "Running using Prefix: ${PROTON_PREFIX}"

  create_prefix_if_necessary "${PROTON_PREFIX}" "$@"

  copy_wineasio_dlls "${PROTON_DIST}" "${PROTON_PREFIX}"
  register_wineasio_dlls "${PROTON_DIST}" "${PROTON_PREFIX}"

  validate_game_env
  run_game "$@"
}

main "$@"
